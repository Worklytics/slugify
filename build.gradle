plugins {
    id 'checkstyle'
    id 'java-library'
    id 'maven-publish'
    id 'pmd'
    id 'signing'

    alias(libs.plugins.jmh)
    alias(libs.plugins.lombok)
    alias(libs.plugins.reckon)
    alias(libs.plugins.versions)
}

repositories {
    mavenCentral()
}

group = 'com.github.slugify'

checkstyle {
    toolVersion = '10.3'
}

compileJava {
    targetCompatibility = JavaVersion.VERSION_11
}

jmh {
    jmhVersion = '1.35'
}

pmd {
    consoleOutput = true
    toolVersion = '6.46.0'
    ruleSetFiles = fileTree('config/pmd').filter { it.file && it.name.endsWith('.xml') }
    ruleSets = []
}

reckon {
    stages('milestone', 'rc', 'final')
    snapshots()

    scopeCalc = calcScopeFromProp()
    stageCalc = calcStageFromProp()
}

java {
    registerFeature('transliterator') {
        usingSourceSet sourceSets.main
    }

    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.addBooleanOption("Xdoclint:all", true)
    options.addBooleanOption('html5', true)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'Slugify'
                description = 'SEO-friendly URLs with Slugify'
                url = 'https://github.com/slugify/slugify'

                developers {
                    developer {
                        id = 'dtrunk90'
                        name = 'Danny Trunk'
                        email = 'dtrunk90@gmail.com'
                    }
                }

                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/slugify/slugify/issues'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/slugify/slugify.git'
                    developerConnection = 'scm:git:ssh://github.com/slugify/slugify.git'
                    url = 'https://github.com/slugify/slugify'
                }
            }

            repositories {
                maven {
                    def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
                    def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                    credentials {
                        username ossrhUsername
                        password ossrhPassword
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava

    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    if (signingKey && signingPassword) {
        useInMemoryPgpKeys(signingKey, signingPassword)
    }
}

tasks.named('dependencyUpdates').configure {
    gradleReleaseChannel = 'current'
    revision = 'release'
}

dependencies {
    transliteratorImplementation libs.icu4j
    testImplementation libs.icu4j
    testImplementation libs.junit
}

reckonTagCreate.dependsOn check
